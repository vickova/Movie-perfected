{"version":3,"file":"static/js/44.75f24524.chunk.js","mappings":"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","sources":["images/youtube.svg","pages/Popular.js","utils/fetchData.js"],"sourcesContent":["var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgYoutube(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 461.001 461.001\",\n    style: {\n      enableBackground: \"new 0 0 461.001 461.001\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#F61C0D\"\n    },\n    d: \"M365.257,67.393H95.744C42.866,67.393,0,110.259,0,163.137v134.728 c0,52.878,42.866,95.744,95.744,95.744h269.513c52.878,0,95.744-42.866,95.744-95.744V163.137 C461.001,110.259,418.135,67.393,365.257,67.393z M300.506,237.056l-126.06,60.123c-3.359,1.602-7.239-0.847-7.239-4.568V168.607 c0-3.774,3.982-6.22,7.348-4.514l126.06,63.881C304.363,229.873,304.298,235.248,300.506,237.056z\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null)), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgYoutube);\nexport default __webpack_public_path__ + \"static/media/youtube.9e6e68bec2c1f5e29b3b54dc02f54c47.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\r\nimport { MoviesFetch, VideosFetch } from '../utils/fetchData';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport '../App.css';\r\nimport Youtube from '../images/youtube.svg'\r\n\r\nconst Popular = ({detailsId, setDetailsId}) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [videoId, setVideoId] = useState({});\r\n  const [popularVideos, setPopularVideos] = useState([]);\r\n  const [videoButton, setVideoButton] = useState(false);\r\n  \r\n  const image_base_url= 'https://image.tmdb.org/t/p/w500';\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const PerPage = 8;\r\n  const indexOfLastExercise = currentPage * PerPage;\r\n\r\n  const indexOfFirstExercise = indexOfLastExercise - PerPage\r\n  const currentExercises = movieData.slice(indexOfFirstExercise, indexOfLastExercise)\r\n\r\n  useEffect(()=>{\r\n      const fetchData = async ()=>{\r\n        const MovieData = await MoviesFetch();\r\n        setMovieData(MovieData.results);\r\n      }\r\n      fetchData()\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async ()=>{\r\n      const MovieData = await VideosFetch(videoId?videoId: 1);\r\n      setPopularVideos(MovieData.results[0].key);\r\n    }\r\n    fetchData()\r\n}, [videoId, popularVideos])\r\nconst Paginate = (e, value)=>{\r\n  setCurrentPage(value)\r\n\r\n  window.scrollTo({top: 10, behavior: 'smooth'})\r\n}\r\n  return (\r\n    <div className=\"movie-container\">\r\n      <div>\r\n      <div className=\"movie-cover\">\r\n      {currentExercises?.map((movies, i) =>\r\n        <div className=\"movie-card\" key={i}>\r\n          <img src={`${image_base_url}${movies.poster_path}`} alt={movies.name}/>\r\n          <div className=\"movie-text\">\r\n            <h3>{movies.original_title}</h3>\r\n            <p>Released: {movies.release_date}</p>\r\n            <div className=\"youtube\">\r\n            <Link to='/popular/details' id='movie-link'><button id=\"button\" onClick={()=>setDetailsId({backdrop: movies.backdrop_path, original_title:movies.original_title, release_date: movies.release_date, overview:movies.overview})}>Read More...</button></Link>\r\n            <button onClick={()=> {setVideoId(movies.id); setVideoButton(!videoButton)}}>Watch Trailer</button>\r\n            <a href={`https://www.youtube.com/watch?v=${popularVideos}`} style={{display: videoButton? 'block': 'none'}}><button><img style={{width: '20px', height:'20px'}} src={Youtube} alt='youtube-video'/></button></a>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )}\r\n      <div style={{display: 'flex', alignItems:'center', justifyContent:'center', width: '100%'}}>\r\n      {movieData.length > 6 && (\r\n      <Pagination\r\n              color=\"standard\"\r\n              shape=\"rounded\"\r\n              defualtpage={1}\r\n              count={Math.ceil(movieData.length / PerPage)}\r\n              page={currentPage}\r\n              onChange={Paginate}\r\n              size=\"large\"\r\n            />\r\n          )}\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popular","const API_KEY = process.env.REACT_APP_TMDB_API_KEY\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const MoviesFetch = async (page=1)=>{\r\n    const getMovies = await fetch(`${BASE_URL}movie/popular?api_key=${API_KEY}&page=${page}`).then();\r\n    const getMoviesDat = getMovies.json();\r\n    console.log(getMovies)\r\n    return getMoviesDat\r\n}\r\n\r\nexport const TrendingFetch = async (page=1)=>{\r\n    const getMovies = await fetch(`${BASE_URL}movie/top_rated?api_key=${API_KEY}&page=${page}`).then();\r\n    const getMoviesDat = getMovies.json();\r\n    return getMoviesDat\r\n}\r\n\r\nexport const VideosFetch = async (movieId)=>{\r\n    let getVideos = await fetch(`${BASE_URL}movie/${movieId? movieId: '#'}/videos?api_key=${API_KEY}&language=en-US}`).then();\r\n    getVideos = getVideos.json();\r\n    return getVideos\r\n}"],"names":["detailsId","setDetailsId","useState","movieData","setMovieData","videoId","setVideoId","popularVideos","setPopularVideos","videoButton","setVideoButton","currentPage","setCurrentPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","useEffect","fetchData","MoviesFetch","MovieData","results","VideosFetch","key","className","map","movies","i","src","poster_path","alt","name","original_title","release_date","to","id","onClick","backdrop","backdrop_path","overview","href","style","display","width","height","Youtube","alignItems","justifyContent","length","color","shape","defualtpage","count","Math","ceil","page","onChange","e","value","window","scrollTo","top","behavior","size","API_KEY","process","BASE_URL","fetch","then","getMovies","getMoviesDat","json","console","log","TrendingFetch","movieId","getVideos"],"sourceRoot":""}